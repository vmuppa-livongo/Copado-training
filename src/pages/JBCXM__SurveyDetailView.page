<apex:page Controller="JBCXM.SurveyReports" tabStyle="Survey__tab" title="Survey Detail View" sidebar="false" showHeader="false" readonly="true">
    <!--<apex:includeScript value="{!JSENCODE(URLFOR($Resource.SurveyJquery,'js/jquery-1.7.1.min.js'))}"/>
    <apex:includeScript value="{!JSENCODE(URLFOR($Resource.SurveyJquery,'js/jquery-ui-1.8.18.custom.min.js'))}"/>
    <apex:includeScript value="{!JSENCODE(URLFOR($Resource.CustomJS, 'CustomJS/jbaraCustomUtility.js'))}" />

    <apex:includeScript value="{!JSENCODE(URLFOR($Resource.jqGrid,'jqGridLatest/js/i18n/grid.locale-en.js'))}"/>
    <apex:includeScript value="{!JSENCODE(URLFOR($Resource.jqGrid,'jqGridLatest/js/jquery.jqGrid.min.js'))}"/>

    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.jqGrid, 'jqGridLatest/css/ui.jqgrid.css'))}"/>
    <apex:stylesheet value="{!JSENCODE(URLFOR($Resource.SurveyJquery, 'css/redmond/jquery-ui-1.8.18.custom.css'))}"/>

        <apex:includeScript value="{!JSENCODE(URLFOR($Resource.SurveyUtil,'SurveyUtil.js'))}"/>
		<apex:includeScript value="{!JSENCODE(URLFOR($Resource.CustomJS, 'CustomJS/date.format.js'))}" />
	<style>
		.ui-jqgrid tr.jqgrow td {
		  white-space: nowrap;
		}
		.ui-jqgrid .ui-jqgrid-resize-ltr {
		    float: right;
		    margin:0;
		}	
		#gbox_dummyQuesAndAnsReportsId.ui-corner-all, #gbox_dummyQuesAndAnsReportsId.ui-corner-top, #gbox_dummyQuesAndAnsReportsId.ui-corner-left, #gbox_dummyQuesAndAnsReportsId.ui-corner-tl {
		    border-top-left-radius: 0px;
		}
		#gbox_dummyQuesAndAnsReportsId.ui-corner-all, #gbox_dummyQuesAndAnsReportsId.ui-corner-top, #gbox_dummyQuesAndAnsReportsId.ui-corner-right, #gbox_dummyQuesAndAnsReportsId.ui-corner-tr {
		    border-top-right-radius: 0px;
		}
		#gbox_dummyQuesAndAnsReportsId.ui-corner-all, #gbox_dummyQuesAndAnsReportsId.ui-corner-bottom, #gbox_dummyQuesAndAnsReportsId.ui-corner-left, #gbox_dummyQuesAndAnsReportsId.ui-corner-bl {
		    border-bottom-left-radius: 0px;
		}
		#gbox_dummyQuesAndAnsReportsId.ui-corner-all, #gbox_dummyQuesAndAnsReportsId.ui-corner-bottom, #gbox_dummyQuesAndAnsReportsId.ui-corner-left, #gbox_dummyQuesAndAnsReportsId.ui-corner-br {
		    border-bottom-left-radius: 0px;
		}
		#gbox_dummyQuesAndAnsReportsId.ui-corner-all, #gbox_dummyQuesAndAnsReportsId.ui-corner-bottom, #gbox_dummyQuesAndAnsReportsId.ui-corner-right, #gbox_dummyQuesAndAnsReportsId.ui-corner-br {
		    border-bottom-right-radius: 0px;
		}
		.ui-th-column-header{
			overflow:hidden;
		}
		#gview_dummyQuesAndAnsReportsId.ui-jqgrid-hdiv{
			position: relative;
		}
	</style>

<apex:form >
	<script type="text/javascript">
        var j$ = jQuery.noConflict();
        j$.jgrid.no_legacy_api = true;
        j$.jgrid.useJSON = true;
        var userLocaleDateFormatMap,jqGridDateFormat,jqGridDateTimeFormat;
        var allDetailQuestionsListJsonData;
        var allRespondedParticpantsListJsonData;
       	var dummySRUIViewColumnsStr, dummyIsCustomSRView, dummySRSortableFieldsJSONStr;
        var filteredDetailQuestionData;
        var buildGroupHeadersPropertiesList = new Array(); 
		var buildGroupHeadersPropertiesObj;
        j$(document).ready(function(){
        	allDetailQuestionsListJsonData =  eval({!(AllQuestionsBySurveyId)});    
        	userLocaleDateFormatMap =eval({!(userLocaleDateFormatMap)});
			jqGridDateFormat 		=JBARAjqGridDateFormat(userLocaleDateFormatMap);
			jqGridDateTimeFormat 	=JBARAjqGridDateTimeFormat(userLocaleDateFormatMap); 
			buildSurveyDetailViewGird();
        });

       //This function is used to build details report of grid
		function buildQuestionsBySurveyId(quesList, partList, grdSortColumn, grdSortOrder){
        	var htmltable = '';
        	var htmlHeadertable = '';
        	var htmlSubHeadertable='';
        	var ansText = '';
        	var userAnswersList ='';
        	var matrixSubQues ='';
        	var matrixSubQuesResponses='';
        	respondedList= [];
        	htmlHeadertable += '<thead><tr>';
        	htmlSubHeadertable += '<tr>';
	        htmlHeadertable += '<th style="width:140px;min-width:140px;">Participant</th>';
	        htmlHeadertable += '<th style="width:140px;min-width:140px;">Account</th>';
	        htmlHeadertable += '<th style="width:150px;min-width:150px;">Responded</th>';
	        for(var c = 0; c < dummySRUIViewColumnsStr.length; c++) {
	        	htmlHeadertable += '<th style="width:100px;min-width:100px;">'+j$.trim(dummySRUIViewColumnsStr[c].label)+'</th>';
	        }
	        
	        htmltable += '<tbody>';
	        /**
			*Javascript Object to store the survey paricipant details properties.
			*/


			function buildGroupHeadersPropClass(data) {
			    this.startColumnName          			= data.startColumnName;
		    	this.numberOfColumns			        = data.numberOfColumns;
   				this.titleText                 			= data.titleText;
			}

			var viewColumnList = dummySRUIViewColumnsStr;
			var colDataType, colFieldName, colObjectName, colFieldval, colPrefix;
			buildGroupHeadersPropertiesList = new Array();
			buildGroupHeadersPropertiesList.push({startColumnName: 'Participant', numberOfColumns: 3, titleText: ' '});
			
        	for(var i = 0 ; i < partList.length; i++ ){
	        	respondedList = partList[i].Participant__r.records;
	        	htmltable += '<tr>';
        		htmltable += '<td>';
        		htmltable += partList[i].DisplayName__c;
        		htmltable += '</td>';
        		htmltable += '<td>';
        		htmltable += (partList[i].Account__r.Name == null) ? '' : ('<a title=\''+ (partList[i].Account__r.Name).replace(/'/g, "&rsquo;") +'\' href=\'CustomerSuccess360?cid='+ partList[i].Account__r.Id+'\' target=\'_top\'>'+ (partList[i].Account__r.Name) +'</a>');
        		htmltable += '</td>';
        		htmltable += '<td>';
        		htmltable += JBARAAddOffSetTime(partList[i].ResponseDate__c, userLocaleDateFormatMap);
        		htmltable += '</td>';
        		 
        		for(var c = 0; c < viewColumnList.length; c++) {
        			
        			colDataType = viewColumnList[c].fieldType.toLowerCase();
	       			colDataType = (colDataType == "double" || colDataType == "integer") ? "number" : colDataType;
       				colFieldName = viewColumnList[c].name;
       				colObjectName = viewColumnList[c].objectName;
        			if(colObjectName == 'Contact' || colObjectName == 'Account' || colObjectName == 'CustomerInfo__c' || colObjectName == 'SurveyParticipant__c') {
        				htmltable += '<td>';
       					if(colFieldName.indexOf(".") > 0) {
	       					var testStr = colFieldName.split(".");
	       					colFieldval = (colObjectName == 'Contact') ? ((partList[i].Contact__r != null) ? ((partList[i].Contact__r[testStr[0]] != null) ?  partList[i].Contact__r[testStr[0]][testStr[1]] : null ) : null)
	       																: ((colObjectName == 'Account') ? ((partList[i].Account__r != null) ? ( (partList[i].Account__r[testStr[0]] != null) ?  partList[i].Account__r[testStr[0]][testStr[1]] : null) : null)
	       																: ((colObjectName == 'CustomerInfo__c') ? ((partList[i].Account__r != null) ? ((partList[i].Account__r.CustomerInfo__r != null) ? ( (partList[i].Account__r.CustomerInfo__r[testStr[0]] != null) ?  partList[i].Account__r.CustomerInfo__r[testStr[0]][testStr[1]] : null) : null) : null)
	       																: ((partList[i][testStr[0]] != null) ? partList[i][testStr[0]][testStr[1]] : null)));	
	       				}
	       				else {
	       					colFieldval = (colObjectName == 'Contact') ? ((partList[i].Contact__r != null) ? partList[i].Contact__r[colFieldName] : null)
	       																: ((colObjectName == 'Account') ? ((partList[i].Account__r != null) ? partList[i].Account__r[colFieldName] : null)
	       																: ((colObjectName == 'CustomerInfo__c') ? ((partList[i].Account__r != null) ? ((partList[i].Account__r.CustomerInfo__r != null) ? partList[i].Account__r.CustomerInfo__r[colFieldName] : null) : null)
	       																: partList[i][colFieldName] ));
	       				
	       				}
	       				
	       				if(colDataType == 'date') {
	       					htmltable += ''+((colFieldval != null) ? JBARAgetDateByUserLocal(colFieldval, userLocaleDateFormatMap) : '')+'';
	       				}
	       				else if(colDataType == 'datetime') {
	       					htmltable += ''+((colFieldval != null) ? JBARAAddOffSetTime(colFieldval, userLocaleDateFormatMap) : '')+'';
	       				}
	   					else {
	    					htmltable += ''+((colFieldval != null) ? colFieldval : ((colDataType == "number" || colDataType == "currency") ? '0' : ''))+''
	   					}
	   					htmltable += '</td>';	   					
	   				}
	        		
	        	}

        		for(var j = 0 ; j < quesList.length; j++ ){        						
        			matrixSubQues = j$.grep(allDetailQuestionsListJsonData, function(dt) {
			                return (dt.ParentQuestion__c ==  quesList[j].Id);
		            });

	        		if(i==0){

	        			//get the matrix subquestions.
	        			if(quesList[j].Type__c != 'MatrixSingleAnswer' && quesList[j].Type__c != 'MatrixMultipleAnswers'){
			        		htmlHeadertable += '<th style="width:240px;min-width:240px;">';
			        		htmlHeadertable += (j+1)+'.'+quesList[j].Title__c;
			        		htmlHeadertable += '</th>';
		        		}
		        		if(matrixSubQues.length > 0) {
			        		for(var l = 0 ; l <matrixSubQues.length; l++ ){
			        			htmlHeadertable += '<th style="width:240px;min-width:240px;" >';
			        			htmlHeadertable +=  (j+1)+'.'+(l+1)+'.'+matrixSubQues[l].Title__c;
			        			htmlHeadertable += '</th>';			        		
			        		}
			        		buildGroupHeadersPropertiesObj = new buildGroupHeadersPropClass({
								startColumnName 	:((j+1)+'.'+(1)+'.'+(matrixSubQues[0].Title__c)).replace(/ /g,"_"),
								numberOfColumns 	:(quesList[j].AllowComment__c) ? matrixSubQues.length+1 : matrixSubQues.length ,
								titleText 			:(j+1)+'.'+quesList[j].Title__c
							});
							buildGroupHeadersPropertiesList.push(buildGroupHeadersPropertiesObj);
			        	}

		        		if(quesList[j].AllowComment__c){
		        			htmlHeadertable += '<th style="width:240px;min-width:240px;">';
		        			htmlHeadertable += quesList[j].CommentLabel__c+'--'+quesList[j].Title__c;
		        			htmlHeadertable += '</th>';
		        		}
		        	}


		            if(matrixSubQues.length > 0) {
			          	for(var m = 0 ; m <matrixSubQues.length; m++ ){
			          		var userAnsArr = new Array();
		        			matrixSubQuesResponses = j$.grep(respondedList, function(dt) {
						                return (dt.Participant__c == partList[i].Id && dt.Question__c ==  matrixSubQues[m].Id);
				            });
				            for(var a = 0 ; a < matrixSubQuesResponses.length; a++){

				            	if(matrixSubQuesResponses[a].Answer__r != null){
				            		userAnsArr.push(matrixSubQuesResponses[a].Answer__r.Title__c);
				            	}
				            }
				            htmltable += '<td>'+userAnsArr;
			        		htmltable += '</td>';
			        		userAnswersList = j$.grep(respondedList, function(dt) {
				                return (dt.Participant__c == partList[i].Id && dt.Question__c == quesList[j].Id);
				            });
		        		}
	        		}
	        		else{
	        			var userAnsArr = new Array();
	        			userAnswersList = j$.grep(respondedList, function(dt) {
			                return (dt.Participant__c == partList[i].Id && dt.Question__c ==  quesList[j].Id);
			            });
			            for(var k = 0 ; k < userAnswersList.length; k++){
			            	if(userAnswersList[k].Answer__r != null && quesList[j].Type__c !='Text' &&  quesList[j].Type__c != 'Comment'){
			            		if(userAnswersList[k].Answer__r.Title__c != null){			            						            			
			            			userAnsArr.push(userAnswersList[k].Answer__r.Title__c);
			            		}
			            		else{
			            			userAnsArr.push(userAnswersList[k].AnswerText__c);
			            		}
			            	}
			            	if(quesList[j].Type__c =='Text' ||  quesList[j].Type__c == 'Comment'){
			            		//var userAnsArr = new Array();
			            		userAnsArr.push(userAnswersList[k].AnswerText__c);
			            	}
			            }
			            htmltable += '<td>'+userAnsArr;
		        		htmltable += '</td>';
	        		}
		        	if(quesList[j].AllowComment__c) {		        	
			            if(quesList[j].Type__c =='NPS') {
			            	ansText = '';
			            	if(userAnswersList.length > 1) {
			            		ansText = ( (userAnswersList[1].AnswerText__c == null) ? ((userAnswersList[0].AnswerText__c == null) ? '' : userAnswersList[0].AnswerText__c) : userAnswersList[1].AnswerText__c) ;
			            	}	        			
		        		}
		        		else {
		        			ansText = ( (userAnswersList.length == 0 || userAnswersList[0].AnswerText__c == null) ? '' : userAnswersList[0].AnswerText__c) ;
		        		}
			        	htmltable += '<td>'+ansText;
			        	htmltable += '</td>';
			        }

	        	}
	        	htmltable += '</tr>';
        	}
        	htmlSubHeadertable += '</tr>';
        	htmlHeadertable += '</tr></thead>';
        	htmltable = '<table cellspacing="0" cellpadding="3" id="dummyQuesAndAnsReportsId">'+htmlHeadertable+htmltable;

        	htmltable += '</tbody>';
        	htmltable += '</table>';


        	j$(".dummyQuestionCommentsReportsBySurvey").html(htmltable);
        	
        	tableToGrid("#dummyQuesAndAnsReportsId", {ignoreCase: true,headertitles:true,rowNum: 100,rowList: [100,200,300], viewrecords:true,sortname:grdSortColumn,sortorder:grdSortOrder});
        	
        	
        	var columnNames = j$("#dummyQuesAndAnsReportsId").jqGrid('getGridParam','colModel');
        	
        	j$("#dummyQuesAndAnsReportsId").jqGrid('setGridParam',{ 
       			onSortCol: function (index, columnIndex, sortOrder) {
       					var sorCol = {name :index, order : sortOrder };
        				window.top.processEntireState(sorCol);
        				onSortColCustomerList(index, columnIndex, sortOrder)
		        return 'stop';
		    }});
		  	
		  	j$("#dummyQuesAndAnsReportsId").jqGrid('setGridParam',{ 
       			gridComplete: function () {
		       		ongridCompleteList();
		        return 'stop';
		    }});
		  	
		  	
			if(buildGroupHeadersPropertiesList.length > 1){
				//alert(JSON.stringify(buildGroupHeadersPropertiesList));
	        	j$("#dummyQuesAndAnsReportsId").jqGrid('setGroupHeaders', {
	        		useColSpanStyle: true,
					groupHeaders: buildGroupHeadersPropertiesList
				});
			}

			j$("#dummyQuesAndAnsReportsId").jqGrid('setColProp','Participant', {frozen:true,sortable:true});
			j$("#dummyQuesAndAnsReportsId").jqGrid('setColProp','Account', {frozen:true,sortable:true});
			j$("#dummyQuesAndAnsReportsId").jqGrid('setColProp','Responded', {frozen:true,sortable:true});
			for(var c = 0; c < viewColumnList.length; c++) {
      			j$("#dummyQuesAndAnsReportsId").jqGrid('setColProp', j$.trim(viewColumnList[c].label), {frozen:false, sortable:false});
       		}
       		
       		for(var c = 0; c < viewColumnList.length; c++) {
      			colDataType = viewColumnList[c].fieldType.toLowerCase();
      			colDataType = (colDataType == "double" || colDataType == "integer") ? "number" : colDataType;
      			if(colDataType == "datetime") {
      				j$("#dummyQuesAndAnsReportsId").jqGrid('setColProp',j$.trim(viewColumnList[c].label),{stype:'datetime',sortable:false,datefmt:"ISO8601Long",formatter:"date",formatoptions:{srcformat: "ISO8601Long", newformat: jqGridDateTimeFormat}});
      			}
      			else if(colDataType == "date") {
      				j$("#dummyQuesAndAnsReportsId").jqGrid('setColProp',j$.trim(viewColumnList[c].label),{stype:'date',sortable:false,datefmt:"ISO8601Long",formatter:"date",formatoptions:{srcformat: "ISO8601Long", newformat: jqGridDateFormat}});
      			}
      			else if(colDataType == 'number' || colDataType == 'currency') {
	           		colPrefix = (colDataType == 'currency') ? '$ ' : '';
	           		j$("#dummyQuesAndAnsReportsId").jqGrid('setColProp',j$.trim(viewColumnList[c].label),{stype:'number',align:'right', sortable:false,formatter:colDataType,formatoptions:{thousandsSeparator:",", decimalPlaces:0, prefix:colPrefix}});
	           	}
        			
       		}
       		j$("#dummyQuesAndAnsReportsId").jqGrid('setColProp','Responded',{stype:'datetime',sortable:true,datefmt:"ISO8601Long",formatter:"date",formatoptions:{srcformat: "ISO8601Long", newformat: jqGridDateTimeFormat}});

   			j$("#dummyQuesAndAnsReportsId").jqGrid('setFrozenColumns');
   			var screenWidth = screen.width - 132;
			j$("#dummyQuesAndAnsReportsId").setGridWidth(screenWidth,false);
			j$("#dummyQuesAndAnsReportsId").setGridHeight(300);
			j$("#dummyQuesAndAnsReportsId").trigger('reloadGrid', [{current:true}]);
			
	        j$("#grdPageBtnContainer").show();      
	        j$("#grdPageBtnContainer,.headerSurveyGridDivToExport").width(j$("#gbox_dummyQuesAndAnsReportsId").width());
	        	
			//j$("#gview_dummyQuesAndAnsReportsId").find(".ui-jqgrid-bdiv").css({'border-radius':'0px !important'});
        }
        
        function ongridCompleteList(){        	
        	removeSortingCursor();
        	hideOverLayForm();
        }
        
        function removeSortingCursor(){
       		j$("#gview_dummyQuesAndAnsReportsId").find(".ui-jqgrid-htable").find(".ui-jqgrid-labels").find("div.ui-jqgrid-sortable").each(function(){
       			if(j$(this).attr("id")!='jqgh_dummyQuesAndAnsReportsId_Account' && j$(this).attr("id")!='jqgh_dummyQuesAndAnsReportsId_Participant' && j$(this).attr("id")!='jqgh_dummyQuesAndAnsReportsId_Responded'){       				
        			j$(this).removeClass("ui-jqgrid-sortable");        				
       			}
       		});
       	}
        
        
        function onSortColCustomerList(index, columnIndex, sortOrder){
    		var sortColumn;
        	//showOverLayForm();
        	if(index=='Participant' || index=='Account' || index=='Responded'){
        		actSortByCols(index,sortOrder); 
        	} 
       	}
      
		/**
        *Function to export transactions list grid data.
        */
        function surveyDetailExportClicked() {
        	//bringToExportPage();
        	actSurveyDetailReportDataExport();
        }
				
		
		function offSetPageClick() {
        //    j$("#grdPageBtnContainer").appendTo("body").hide();
            buildSurveyDetailViewGird();
        }

        function afterSortClick() {
          // j$("#grdPageBtnContainer").appendTo("body").hide();
            buildSurveyDetailViewGird();
        }
        function showOverLayForm() {
            var overLayHeight = j$(document).height();
            var left = (screen.width - overLayWidth) / 2;
            var top = (screen.height - overLayHeight) / 2;
            var overLayWidth = j$(window).width()
            j$(".jbaraDummyOverLayForm").css({
                'z-index': '4999',
                'left': 0,
                'position': 'fixed',
                'width': overLayWidth,
                'height': overLayHeight + 350
            }).show();
        }
		function hideOverLayForm(){
			 j$(".jbaraDummyOverLayForm").hide();			 
		}
		
		var refreshAdvanceSearchPanel=true;
		function gridAdvanceSearchCallBackAfterSearch(strConditions){
			if(strConditions.length == 0) {
				j$(".searchingIndicator").hide();
			}
			else {
				j$(".searchingIndicator").show();
			}
			j$(".hdnAdvanceSearchFilterJson").val(JSON.stringify(strConditions));
			//j$("#grdPageBtnContainer").appendTo("body").hide();
			j$("#grdAdvanceSearchDialog").dialog("close");
			showOverLayForm();
			actRefreshAfterAdvanceSearch();
		}
		function advancedSearchIconClicked(){		    	
			if(refreshAdvanceSearchPanel){
		       		actShowAdvanceSearchForm();
		       		j$(".searchingIndicator").hide();
		       	}
		       	else {
		       		showAdvanceSearchDailog();
			}
      
       	}
	   	function showAdvanceSearchDailog(){
 		
 			j$("#grdAdvanceSearchDialog").dialog({title :'Search Responses',modal: true,minWidth: 775,minHeight: 120,resizable: false});
 			j$("#grdAdvanceSearchDialog").show();
        		refreshAdvanceSearchPanel=false;
      	}
    	function changeAdvanceSearchFrameStyles(param){
			j$("#frmAdvanceSearch").height(param);
		}
		
		
		function buildGridAfterAdvanceSearch(){
			j$("#grdAdvanceSearchDialog").dialog("close");
		}
		
		function gridAdvanceSearchCallBackAfterClose(){
				 j$("#grdAdvanceSearchDialog").dialog("close");
		 }
		 
		 function gridAdvanceSearchCallBackAfterReset(){
			 	j$("#grdAdvanceSearchDialog").dialog("close");
		 }
		
    </script>
    
    <apex:outputPanel id="suveyJSPanel">
    	<script type="text/javascript">
    		function buildSurveyDetailViewGird() {
    			j$('#grdPageBtnContainer').hide();				
	        	
	        	allRespondedParticpantsListJsonData        = '{!JSINHTMLENCODE(AllResponsesBySurveyIdJSON)}';
                		  	
                allRespondedParticpantsListJsonData		=  j$("<\div>").html(allRespondedParticpantsListJsonData).text();
        		
        		allRespondedParticpantsListJsonData       = JSON.parse(gsRemoveNameSpace(gsEncodeHtml(allRespondedParticpantsListJsonData)));
					
	        	
	        	//alert(JSON.stringify(allRespondedParticpantsListJsonData));
	        	dummySRUIViewColumnsStr				= eval({!(srUIViewColumnsStr)});
	        	dummyIsCustomSRView					= '{!(isCustomSRView)}';
	        	dummySRSortableFieldsJSONStr		= eval({!(srSortableFieldsJSONStr)});
				var grdSortColumn='{!(clientSortColumnName)}';
	        	var grdSortOrder='{!(grdSortOrder)}';
	        	filteredDetailQuestionData= j$.grep(allDetailQuestionsListJsonData, function(dt) {return (dt.ParentQuestion__c == null);});
				buildQuestionsBySurveyId(filteredDetailQuestionData, allRespondedParticpantsListJsonData, grdSortColumn,grdSortOrder);
				j$(".headerSurveyGridDivToExport").show(); 	
				j$(".jbaraDummyOverLayForm").hide();
				j$('#grdPageBtnContainer').show();
				
    		}
    		
    	</script>
    </apex:outputPanel>-->
    
    <!-- Action function to initialize the export -->
 	<!--<apex:actionFunction name="actSurveyDetailReportDataExport" action="{!initiateBatchProcessToExportSurveyDetailReport}" reRender="SurveyDetailReportExportMessagePanel" oncomplete="return hideApexPageMessageWithDelay('exportApexMsgId', 7500)"/>
	<apex:outputPanel id="SurveyDetailReportExportMessagePanel">
		<div id="exportApexMsgId"><apex:pageMessages rendered="{!showMsg}"/></div>
	</apex:outputPanel>
   	 	
	 <div id="detailViewDetail">
		<div class="headerSurveyGridDiv headerSurveyGridDivToExport ui-jqgrid-titlebar ui-widget-header ui-corner-top" style="  border-top-left-radius: 5px;border-top-right-radius: 5px;height: 25px;min-height: 25px; display:none;">	 
          	<span class = "searchingIndicator" style = "float:left; margin-top: 3px; margin-left: 4px;display:none;"><img src = "/img/icon/forecasts16.png" /> Search Results</span>
			<div  style="right:20px;display: inline; float:right;cursor: pointer;font-weight:normal;padding: 5px; ">
				<span class="ui-icon ui-icon-search dummygrdAdvancedSearch" onclick="advancedSearchIconClicked()" style="display:inline-block;vertical-align: bottom;cursor:pointer;" title="Search"></span> 
				&nbsp;&nbsp;&nbsp;<a onclick="surveyDetailExportClicked()" title="export" style="color:#FFF" >Export</a>		    		
	 		</div>                         
		</div>
		<div class="dummyQuestionCommentsReportsBySurvey" ></div>		
		
		<div id="grdPageBtnContainer" style="display:none;" class="ui-state-default ui-jqgrid-pager ui-corner-bottom" dir="ltr">
			<apex:outputPanel id="pageBtnPanel" StyleClass="grdHiddenDynamicPgBtn">
		       	<div role="group" class="ui-pager-control" id="pg_plist">
					<table cellspacing="0" cellpadding="0" border="0" role="row" style="width:100%;table-layout:fixed;height:100%;border-bottom-right-radius: 5px; border-bottom-left-radius: 5px;"    class="ui-pg-table">
						<tbody>
						    <tr>
						        <td align="left" id="plist_left">&nbsp;</td>
						        <td align="center" style=" width: 265px;" id="plist_center">
									<table cellspacing="0" cellpadding="0" border="0" class="ui-pg-table" style="table-layout:auto;">
									    <tbody>
									        <tr>
									            <td class="ui-pg-button ui-corner-all" id="grdFirstPageLink" style="cursor: pointer;" onClick="queryWithOffSetByPage(1);return false;"><span class="ui-icon ui-icon-seek-first"></span>
									            </td>
									            <td class="ui-pg-button ui-corner-all" id="grdPrevPageLink" style="cursor: pointer;" onClick="queryWithOffSetPreviousClick();return false;"><span class="ui-icon ui-icon-seek-prev"></span>
									            </td>
									            <td style="width: 4px; cursor: default;" class="ui-pg-button ui-state-disabled"><span class="ui-separator"></span>
									            </td>
									            <td dir="ltr">Page
									            	<apex:inputText StyleClass="ui-pg-input" size="2" maxlength="7" />
									                of <span id="pgCount" style="display:none;"></span>
									                <apex:inputText style="display:none;"/>
									            </td>
									            <td style="width: 4px; cursor: default;" class="ui-pg-button ui-state-disabled"><span class="ui-separator"></span>
									            </td>
									            <td class="ui-pg-button ui-corner-all" id="grdNextPageLink" style="cursor: pointer;"><span class="ui-icon ui-icon-seek-next"></span>
									            </td>
									            <td class="ui-pg-button ui-corner-all" id="grdLastPageLink" style="cursor: pointer;"><span class="ui-icon ui-icon-seek-end"></span>
									            </td>
									            <td dir="ltr">-->
									                <!-- 
									                <select role="listbox" class="ui-pg-selbox">
									                    <option value="100" role="option">100</option>
									                    <option value="200" role="option">200</option>
									                    <option value="300" role="option">300</option>
									                </select> -->
									           <!-- </td>
									        </tr>
									    </tbody>
									</table>
								 </td>
							 	<td align="right" id="plist_right">
							     	<div class="ui-paging-info" style="text-align:right;display:none;" dir="ltr">
			                    		View {!GrdPageStartRecordCounter} - {!GrdPageEndRecordCounter} of <span id="pgTotalRecordCount"> {!GrdTotalRecordCount}</span>
		                    		</div>
			                	</td>
			            	</tr>
						</tbody>
					</table>
				</div>
	           <script>
					var intRecordCount =parseInt('{!(GrdTotalRecordCount)}');
					var maxPagecount =parseInt('{!(GrdOffSetTotalPages)}');
					var offSetSize =parseInt('{!(grdOffSetListSize)}');
					j$("#grdPageBtnContainer").find("#pgCount").html(maxPagecount);
					if(intRecordCount>2000){
						
						j$("#pgTotalRecordCount").html('2000+');
						if(offSetSize==100){
							maxPagecount=20;
						}
						else if(offSetSize==200){
							maxPagecount=10;
						}
						else {
							maxPagecount=7;
						}
						j$("#grdPageBtnContainer").find("#pgCount").html(maxPagecount + '+');	
						
					}
					
					j$("#grdPageBtnContainer").find("#pgCount").show();	
					  	
					  	if('{!(GrdOffSetDisablePrevious)}'=='true'){
					  		j$("#grdPageBtnContainer").find("#grdPrevPageLink").addClass("ui-state-disabled").removeAttr("onClick");
					  		
					  	}
					  	if('{!(GrdOffSetDisableNext)}'=='true'){
					  		j$("#grdPageBtnContainer").find("#grdNextPageLink").addClass("ui-state-disabled").removeAttr("onClick");
					  	}
					  	if('{!(GrdTotalRecordCount)}'=='0'){
					  		j$("#grdPageBtnContainer").find(".ui-paging-info").html('No records to view').show();
					  		j$("#grdPageBtnContainer").find(".ui-pg-input").val(0).attr("disabled","disabled");
					  		j$("#grdPageBtnContainer").find(".ui-pg-selbox").val('{!(GrdoffSetListSize)}').attr("disabled","disabled");;
					  	}
					  	else {
					  		j$("#grdPageBtnContainer").find(".ui-paging-info").show();
					  		j$("#grdPageBtnContainer").find(".ui-pg-input").val('{!(GrdOffSetPageNumber)}').unbind("keyup").bind("keyup",function(event){
					  			this.value = this.value.replace(/[^0-9\.]/g,'');
					  			if(event.which==13 && j$.trim(this.value!='')){
					  				if(parseInt(this.value)<=maxPagecount){
					  					reloadGrid=true;
					  					queryWithOffSetByPage(parseInt(this.value));
					  				}
					  				else {
					  					this.value = '{!(GrdOffSetPageNumber)}';
					  				}
					  			}
					  			
					  			
					  		});
					  		j$("#grdPageBtnContainer").find(".ui-pg-selbox").bind("change",function(){
					  			reloadGrid=true;
					  			queryWithOffSetChangePageSize(j$(this).val());
					  		});
					  		j$("#grdPageBtnContainer").find(".ui-pg-selbox").val('{!(GrdoffSetListSize)}');
					  	}
					  	if(maxPagecount==parseInt(j$("#grdPageBtnContainer").find(".ui-pg-input").val())){
					  		j$("#grdPageBtnContainer").find("#grdNextPageLink").addClass("ui-state-disabled").removeAttr("onClick");
					  		j$("#grdPageBtnContainer").find("#grdLastPageLink").addClass("ui-state-disabled").removeAttr("onClick");
					  	}
					  	else {
					  		j$("#grdPageBtnContainer").find("#grdNextPageLink").unbind("click").bind("click",function(){
					  			queryWithOffSetNextClick();
					  			return false;
					  		});
					  		j$("#grdPageBtnContainer").find("#grdLastPageLink").unbind("click").bind("click",function(){
					  			queryWithOffSetByPage(maxPagecount);
					  			return false;
					  		});
					  	}
		 			</script>	 
			</apex:outputPanel>	 
		</div> 
		
		<apex:actionFunction action="{!grdWithOffSetRefreshGrid}" name="queryWithOffSetByPage" reRender="suveyJSPanel, suveyResponseJSPanel, pageBtnPanel" onComplete="offSetPageClick();" >
	    	<apex:param name="grdPageNumber" value="" />
		</apex:actionFunction>
		<apex:actionFunction action="{!grdWithOffSetChangePageSize}" name="queryWithOffSetChangePageSize" reRender="suveyJSPanel,suveyResponseJSPanel, pageBtnPanel" onComplete="offSetPageClick();" >
		    <apex:param name="grdPageSize" value="" />
		</apex:actionFunction>
		<apex:actionFunction action="{!grdOffSetPreviousClick}" name="queryWithOffSetPreviousClick" reRender="suveyJSPanel,suveyResponseJSPanel,pageBtnPanel" onComplete="offSetPageClick();" />
		<apex:actionFunction action="{!grdOffSetNextClick}" name="queryWithOffSetNextClick" reRender="suveyJSPanel,suveyResponseJSPanel, pageBtnPanel" onComplete="offSetPageClick();" />
		    
		
		<apex:actionFunction action="{!grdWithOffSetSortByColumn}" name="actSortByCols" reRender="suveyJSPanel,suveyResponseJSPanel,pageBtnPanel" onComplete="afterSortClick();" >
			<apex:param name="sortColumn" value="" />
			<apex:param name="sortOrder"  value="" /> 
		</apex:actionFunction>
	
		<apex:InputText StyleClass="hdnAdvanceSearchFilterJson" value="{!advanceSearchFilterJsonString}" style="display:none;"/>
			<apex:actionFunction action="{!refreshAfterAdvanceSearch}" name="actRefreshAfterAdvanceSearch" reRender="suveyJSPanel,pageBtnPanel" onComplete="buildSurveyDetailViewGird();" >
		</apex:actionFunction>
		<apex:actionFunction action="{!showAdvanceSearch}" name="actShowAdvanceSearchForm" reRender="grdAdvanceSearchPanelContainer" onComplete="showAdvanceSearchDailog();" >
		</apex:actionFunction>
		
	</div>
		
   	</apex:form> 	
   		
   
    <div id="grdAdvanceSearchDialog">
      	<apex:outputPanel id="grdAdvanceSearchPanelContainer">
      		<apex:outputpanel rendered="{!renderAdvanceSearchPanel}">
   				<iframe id="frmAdvanceSearch" src="apex/AdvanceSearchIFrame?inline=1&SearchtabName=SurveyReports&externalObjectName={!externalObjectName}&externalObjectLookupFieldName={!externalObjectLookupFieldName}&callbackAfterSearch=gridAdvanceSearchCallBackAfterSearch&callbackAfterReset=gridAdvanceSearchCallBackAfterReset&callbackAfterClose=gridAdvanceSearchCallBackAfterClose" width="735" height="120" frameborder="0"></iframe>
			</apex:outputPanel>
      	</apex:outputPanel>
    </div>
   		
   		
   	<div class="overlayBackground jbaraDummyOverLayForm" style="position: absolute; display: none;" align="center">
	     <div class="waitingHolder" style="margin-top:200px;width: 174px;height:25px;" align="center"><img src="/img/loading.gif" class="waitingImage" title="Please Wait..." />
		 	<span class="waitingDescription" style="color:#FFFFFF;">Loading...</span>
	     </div>
   </div> -->
 </apex:page>