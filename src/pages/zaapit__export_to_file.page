<apex:page applyBodyTag="false" applyHtmlTag="false" cache="true" readOnly="true" renderAs="{!IF(exportTypeOrig=='pdf',exportTypeOrig,'')}" ContentType="{!IF(NOT(exportTypeOrig=='pdf') &&NOT(exportTypeOrig=='prn'),exportType,'')}"  controller="zaapit.export_to_file" showHeader="false">
<apex:repeat value="{!extraEl}" var="extraEl1" rendered="{!AND(exportTypeOrig!='csv',exportTypeOrig!='xml')}"> 
<html> 
  
 <head> 

 <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>

  <title>{!currConf.title__c}</title>
 </head>
  <body style="">
  <div id="tbExport">
  <apex:outputPanel rendered="{!exportTypeOrig!='pdf'}">
    <style type="text/css" media="all">
 #tbExport{font-family: Arial Unicode MS,Arial,Helvetica,sans-serif;}
 {!extraEl1}
 {!currConf.Custom_CSS__c}
body table thead tr td {background:#e5e5e5;font-family: Arial Unicode MS,Arial,Helvetica,sans-serif;}
body table thead tr th{background:#e5e5e5;font-family: Arial Unicode MS,Arial,Helvetica,sans-serif;}

table.exportTable thead td,table.exportTable thead th{padding:1px;background:#e5e5e5;font-size:9pt;border-right:1px solid #cccccc;border-bottom:1px solid #cccccc;}
table.exportTable tbody td{padding:3px;font-size:9pt;border-right:1px solid #cccccc;border-bottom:1px solid #cccccc;}
table.exportTable{border-top:1px solid #cccccc;border-left:1px solid #cccccc;}
.exportTable{width:100%;}
.exportTable td{font-size:{!IF(exportTypeOrig=='pdf','8pt','9pt')};border-right:1px solid #cccccc;border-bottom:1px solid #cccccc;}
#ReportSubtitleX{font-size:11pt;color:#999999;maring:10px 0px;}
  </style>
  </apex:outputPanel> 
<apex:pageMessages id="mainTB1Err"/>
<div id="mainTBX1" class="mainTBXs">
<div style="font-size:13pt;font-weight:bold;" align="left" valign="top" id="ReportTitleX">{!currConf.title__c}</div><div id="ReportSubtitleX"></div>

<table id="exportTable" class="exportTable" cellspacing="0" cellpadding="3" border="{!IF(exportTypeOrig=='pdf','1','0')}"  bordercolor="red" style="font-size:{!IF(exportTypeOrig=='pdf','8pt','9pt')};">
<thead>
<tr style="background:#e5e5e5;">
<apex:repeat value="{!fieldset}" var="tf" >
<th filter="all" tpx="{!filterObjShow[tf]}" fld="{!tf}"><apex:outputText value="{!fieldsHeaders[tf]}" /></th>
 </apex:repeat>
 </tr>
</thead>
<tbody>
<apex:repeat value="{!dataToExport}" var="s" ><apex:outputText value="{!s}" escape="false"/></apex:repeat>
</tbody>
</table>
</div>

<apex:outputPanel rendered="{!exportTypeOrig!='xls'}">  
<div style="">
    <div style="font-size:8pt;margin-top:10px;">
    {!$Label.Generated_on} &nbsp;<apex:outputText value="{!NOW()}"></apex:outputText>.<br/>
    {!$Label.Generated_By} &nbsp;<apex:outputText value="{!$User.FirstName}"/>&nbsp;<apex:outputText value="{!$User.LastName}"/>.
    </div> 
    <div style="text-align:center;color:#a5a5a5;margin-top:10px;"> <a href="http://www.zaapit.com/rd_nt?s=exp" target="_blank" style="text-align:center;color:#a5a5a5;font-size:9pt;"><span style="color:#a5a5a5;font-size:9pt">Generated by ZaapIT (ZaapIT.com)</span></a></div>
</div>
</apex:outputPanel>
</div>
<apex:outputPanel rendered="{!exportTypeOrig=='prn'}">
<hideinExport>
 <apex:stylesheet value="{!URLFOR($Resource.zaapit__jqueryui_pck, '/jquery-ui-1.12.1.custom/jquery-ui.min.css')}"/>
<script type="text/javascript" src="{!$Resource.zp_jquery172}"></script>
<script type="text/javascript" src="{!URLFOR($Resource.jqueryui_pck, '/jquery-ui-1.12.1.custom/jquery-ui.min.js')}"></script>
 
 <script src="{!$Resource.zaapit__jszip}"></script>

<script src="{!URLFOR($Resource.pdfJS, 'jspdf.min.js')}" ></script>
<script src="{!URLFOR($Resource.pdfJS, 'html2canvas.js')}" ></script>


<script>
ReportAddTotalsAlreadyRun=0;
var Enable_Sort_grouping={!IF(currConf.Enable_Sort_grouping__c,true,false)};
var sortBy="{!JSENCODE(currConf.sortBy__c)}";
var Blanks_txt="{!$Label.Blanks_txt}";

function exportFile(type, fn, dl) {

	var imagesX1="";
	var imagesX2="";
	var imagesX2Titles="";
	if(showCHarts==1){
	if(opener.ChartsArray!=null){
        for(label1 in opener.ChartsArray){
	
	        if(label1!=null && label1!=""){
			    var my_chart = opener.ChartsArray[label1];
				
			    if(my_chart!=null && my_chart.indexOf!=null && my_chart.indexOf("base64,")>-1){
			    	var base64x=my_chart.split("base64,")[1];
			    	imagesX1+=	'Content-Type: image/png;name="'+label1+'.png\n'+
					'Content-Transfer-Encoding: base64\n'+
					'Content-ID: <'+label1+'.png>\n\r'+
					base64x+
					'\n--12345\n';
			    	imagesX2+='<td colspan="5" height="195"><img height="195" width="640" src="cid:'+label1+'.png" /> </td>';
			    	imagesX2Titles+="<td colspan='5' style='font-weight:bold;'>"+opener.ChartsArrayTitle[label1]+" </td>  ";
			    }
	        }
				
	     }
    }
	}
	var imagePart='MIME-Version: 1.0 \nContent-Type: multipart/mixed; boundary="12345" \n\r'+
	'--12345\n'+
	imagesX1+
	'Content-Type: text/html; charset="utf-8"\n\r';
	
	var html1="<html>"+(showCHarts==1?"<table><tr>"+imagesX2Titles+"</tr><tr>"+imagesX2+"</tr></table>":"")+$("html").html()+"</html>"+(showCHarts==1?"\n--12345--":"");
	
	html1=html1.substring(0,html1.indexOf("<hideinExport"))+html1.substring(html1.indexOf("/hideinExport>\n")+14);//
	html1=html1.substring(0,html1.indexOf("<head"))+html1.substring(html1.indexOf("/head>\n")+6);
	for(var k=0;k<10 && html1.indexOf("<script")>-1;k++){
		html1=html1.substring(0,html1.indexOf("<script"))+html1.substring(html1.indexOf("/script>")+8);
	}
	for(var k=0;k<10 && html1.indexOf("<link")>-1;k++){
		html1=html1.substring(0,html1.indexOf("<link"))+html1.substring(html1.indexOf("/link>")+6);
	}
	//alert(html1);
	if(showCHarts==1){
		html1=imagePart+html1;
	}
	//console.log(html1);
	var blob = new Blob([html1], { type: 'plain/text', endings: 'native'});
	saveAs(blob, fn); 
}
var exportTypeOrig="{!exportTypeOrig}";

$(document).ready(function(){
    if(Enable_Sort_grouping && sortBy!="" && sortBy!="null"){
        var lastVal="";
        var lastCount=0;
        var CurrVal="";
        var lastTR=$(".exportTable tbody tr:first");
        var colNum=-1;
        var colNumFound=false;
   
        var Numcols=lastTR.find("td").length;
        lastTR.find("td").each(function(){
            if(!colNumFound){
                colNum++;
                if($(this).attr("class")==sortBy){
                    colNumFound=true;
                }
                
            }
        });
        //alert(lastTR+colNumFound);
        if(colNumFound){
            var headerName=$(".exportTable thead th:nth-child("+(colNum+1)+")").text();
            $(".exportTable ."+sortBy).each(function(){
                CurrVal=$(this).text();
                if(lastCount==0){
                    lastVal=CurrVal;
                }
                if(CurrVal!=lastVal){
                    $("<tr style='background:#efefef;' class='grpx'><td colSpan='"+Numcols+"'>"+headerName+": "+(lastVal==""?Blanks_txt:lastVal)+" ("+lastCount+") </td></tr>").insertBefore(lastTR);
                    lastCount=0;
                    lastTR=$(this).parents("tr:first");
                }
                lastVal=CurrVal;
                lastCount++;
            });
            if(lastCount>0){
                $("<tr style='background:#efefef;' class='grpx'><td colSpan='"+Numcols+"'>"+headerName+": "+(lastVal==""?Blanks_txt:lastVal)+" ("+lastCount+") </td></tr>").insertBefore(lastTR);
            }
        }
    }
    if({!exportTypeOrig=='prn'}) {
    	 var buttons1=new Array();
			buttons1.push({ 
		text: "Print",
		click: function() { 
			$("#ReportSubtitleX").text($("#ReportSubtitle").val());
			$("#ReportTitleX").text($("#ReportTitle").val());
			var ReportAddCharts=$("#ReportAddCharts").is(":checked");
			var imagesX2="";
			var imagesX2Titles="";
			if(ReportAddCharts){
				if(opener.ChartsArray!=null){
			        for(label1 in opener.ChartsArray){
				
				        if(label1!=null && label1!=""){
						    var my_chart = opener.ChartsArray[label1];
							
						    if(my_chart!=null && my_chart.indexOf!=null && my_chart.indexOf("base64,")>-1){
						    	imagesX2+='<td colspan="5" height="195"><img height="195" width="640" src="'+my_chart+'" /> </td>';
						    	imagesX2Titles+="<td colspan='5' style='font-weight:bold;'>"+opener.ChartsArrayTitle[label1]+" </td>  ";
						    }
				        }
							
				     }
			    }
			    $("<div id='topGraphs'><table><tr>"+imagesX2Titles+"</tr><tr>"+imagesX2+"</tr></table></div>").insertAfter("#ReportTitleX");
			    $("#ReportTitleX,#topGraphs").css({"margin-bottom":"10px"});
			    
				}
			
			jQuery( this ).dialog( "close" ); 
		 setTimeout(function(){window.print();self.close();},500);
			
		}
		});


			buttons1.push({ //custom print pdf
				text: "Save as PDF",
				click: function() { 
					var exportTypeArr="{!exportType}".split("#");
					$("#ReportSubtitleX").text($("#ReportSubtitle").val());
					$("#ReportTitleX").text($("#ReportTitle").val());
					var ReportAddCharts=$("#ReportAddCharts").is(":checked");
					var imagesX2="";
					var imagesX2Titles="";
					if(ReportAddCharts && $("#topGraphs").length==0){
						if(opener.ChartsArray!=null){
					        for(label1 in opener.ChartsArray){
						
						        if(label1!=null && label1!=""){
								    var my_chart = opener.ChartsArray[label1];
									
								    if(my_chart!=null && my_chart.indexOf!=null && my_chart.indexOf("base64,")>-1){
								    	imagesX2+='<td colspan="5" height="195"><img height="195" width="640" src="'+my_chart+'" /> </td>';
								    	imagesX2Titles+="<td colspan='5' style='font-weight:bold;'>"+opener.ChartsArrayTitle[label1]+" </td>  ";
								    }
						        }
									
						     }
					    }
					    $("<div id='topGraphs'><table><tr>"+imagesX2Titles+"</tr><tr>"+imagesX2+"</tr></table></div>").insertAfter("#ReportTitleX");
					    $("#ReportTitleX,#topGraphs").css({"margin-bottom":"10px"});
					    
						}
					
					
					jQuery( this ).dialog( "close" ); 
					
					 var doc = new jsPDF({
						 orientation: 'l',
						 unit: 'pt',
						 format: 'a0',
						 precision:1,
						 userUnit:0.9
						});    
					
					 doc.html(document.body, {
					
						   callback: function (doc) {
							   var name1=$("#ReportTitleX").text().replace(/[^a-z0-9]/ig,'_');
							   doc.save('export_'+name1+'.pdf');

							   setTimeout(function(){
									self.close();
							   },1500);
								 
						   }
						});

					
					 
				}
				});
					

			buttons1.push({
				text: "Save as Xls", 
				click: function() { 
					//jQuery( this ).dialog( "close" ); 
					var ReportAddTotals=$("#ReportAddTotals").is(":checked");
					var ReportAddCharts=$("#ReportAddCharts").is(":checked");
					$("#ReportSubtitleX").text($("#ReportSubtitle").val());
					$("#ReportTitleX").text($("#ReportTitle").val());
					var row1=null;
					 var exportTypeArr="{!exportType}".split("#");
					  if(ReportAddTotals && ReportAddTotalsAlreadyRun==0){
						  ReportAddTotalsAlreadyRun=1;
						 row1=$("#exportTable thead tr").clone().attr("id","totalsTH");
						 var col1=0;
						 var firstLineGroup=$("#exportTable tbody tr:first").hasClass("grpx");
						 row1.find("th").each(function(){
							 $(this).removeAttr("filter");
							 var tpx=$(this).attr("tpx");
							 var fld=$(this).attr("fld");
							if(tpx == "35" || tpx == "3"){
								var exCol=numberToLetters(col1+1)
								$(this).css({"color":"#999999","text-align":"right"})
								if(tpx == "3"){
									//$(this).attr("data-cell-format-enum","3");
									$(this).html("=SUBTOTAL(9,"+exCol+(firstLineGroup?6:5)+":"+exCol+"50000)");
									$(this).attr("data-cell-type","formula").attr("data-cell-format-enum","3");
								}else{
									$(this).html("=DOLLAR(SUBTOTAL(9,"+exCol+(firstLineGroup?6:5)+":"+exCol+"50000),1)");
									//$(this).attr("data-cell-format-str","0.00").attr("data-cell-format-enum","3");
									$(this).attr("data-cell-type","formula").attr("data-cell-format-enum","3");
								}
						 	}else{
						 		if(col1==0){
						 			$(this).text("Sum").css({"color":"#aaaaaa"});
							 	}else{
						 			$(this).html("");
						 		}
						 	}		 
							col1++;
						});
						 row1.insertBefore("#exportTable thead tr:first");
						
					  }
					  showCHarts=ReportAddCharts?1:0;
					
					  exportFile(exportTypeArr[0],exportTypeArr[1]);
				      if(row1!=null)row1.remove();
				      
				      //setTimeout(function(){self.close();},3500);
				
				} 
				});
			
		buttons1.push({
		text: "Close", 
		click: function() { 
		self.close();
		jQuery( this ).dialog( "close" ); 
		} 
		});
		
		$( "#printpopup" ).dialog({ 
		resizable: false, 
		modal: true, 
		width:510,
		buttons: buttons1
		}); 
        
    }else{
       
    }
});

function numberToLetters(nNum) {
	function letter(nNum) {
		var a = "A".charCodeAt(0);
		return String.fromCharCode(a + nNum - 1);
	}
    var result;
    if (nNum <= 26) {
        result = letter(nNum);
    } else {
        var modulo = nNum % 26;
        var quotient = Math.floor(nNum / 26);
        if (modulo === 0) {
            result = letter(quotient - 1) + letter(26);
        } else {
            result = letter(quotient) + letter(modulo);
        }
    }

    return result;
}

</script>
<div id="printpopup" title="Print / Save as XlS">

<div style="margin:5px 0px;"><span style="width:120px;    display: inline-block;">Report Title:</span> <input type="text" id="ReportTitle" style="width:65%" value="{!currConf.title__c}"/>
</div><div style="margin:5px 0px;">
<span style="width:120px;    display: inline-block;">Report Subtitle:</span> <input type="text" id="ReportSubtitle" style="width:65%"/>
</div><div style="margin:5px 0px;">
<span style="width:120px;    display: inline-block;">Add Totals to XLS</span> <input type="checkbox" id="ReportAddTotals" />
</div><div style="margin:5px 0px;"><span style="width:120px;    display: inline-block;">Add Charts</span> <input type="checkbox" id="ReportAddCharts" />
</div><div style="margin:5px 0px;">
Print or Save as XlS?
</div>

</div>
</hideinExport>
</apex:outputPanel>

  </body>
</html>
</apex:repeat><apex:repeat rendered="{!exportTypeOrig=='csv'}" value="{!fieldset}" var="tf" ><apex:outputText value="{!fieldsHeaders[tf]}"/>,</apex:repeat>
<apex:repeat rendered="{!exportTypeOrig=='csv'}" value="{!dataToExport}" var="s" ><apex:outputText value="{!s}" escape="false"/></apex:repeat>{!IF(exportTypeOrig=='xml',listXMLStart,'')}
<apex:repeat rendered="{!exportTypeOrig=='xml'}" value="{!dataToExport}" var="s" ><apex:outputText value="{!s}" escape="false"/></apex:repeat>{!IF(exportTypeOrig=='xml',listXMLEnd,'')}
</apex:page>