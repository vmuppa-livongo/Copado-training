<!-- Copyright (c) 2011 JBara Software, Inc.
---- Purpose                    : Container page for Customer Experience Control Panel(Opportunity).
---- Other comments (optional)  : User can have the complete summary of a customer in the Opportunity level.
-->
<apex:page docType="html-5.0" standardController="Opportunity"  showHeader="false" sidebar="false" title="Customer Success" showChat="false" extensions="JBCXM.Customer360Broker,JBCXM.NSRemoting,JBCXM.GSCommonBroker">
    <style id="gs-app-temp-style-for-flash" type="text/css"> object{opacity: 0} </style>
    <script type="text/javascript">
     window.addEventListener('load', function(){
         var styleNode = document.querySelector('#gs-app-temp-style-for-flash');
         styleNode.remove ? styleNode.remove() : styleNode.parentElement.removeChild(styleNode);
     });

     var defaultImage = "{!(URLFOR($Resource.GSAppCSS))}";
        defaultImage = defaultImage +"/images/sponsor-images/empty-img.png";
        if(!window.GSPerformance){
            window.GSPerformance = {};
            window.GSPerformance.mark = window.GSPerformance.measure = function(){};
        }
        var hideTopbar = "{!($CurrentPage.parameters.hideMenu) == '1'}";
        var d = new Date();
        var hc = eval({!(headerConfig)});
        var apiEndPoint = hc.gatewayURL;
        var GS = GS || {};
            var nsParams                = eval({!(nsParams)});
            GS.remotingEndPoint     = '{!($RemoteAction.Customer360Broker.customer360RequestBroker)}';
            GS.remotingBulkEndPoint = '{!($RemoteAction.Customer360Broker.customer360BulkRequestBroker)}';
            GS.commonRemotingEndPoint = '{!$RemoteAction.GSCommonBroker.gsCommonRequestBroker}';
            GS.packageNS            = "{!(pkgNS)}";
            GS.antConfig                = eval({!(ANTConfig)});
            GS.activityServiceUrl = nsParams.url + "/ant";
            GS.isPackagedInstance   = (GS.packageNS) ? "true" : "false";
            GS.customerName         = "{!(JSINHTMLENCODE(customerName))}";
            GS.customerStatus       = "{!(customerStatus)}";
            GS.custStatusSysName    = "{!(custStatusSysName)}";
            GS.sessionId =  "{!(NSSessionId)}";
            GS.remoting = "{!($RemoteAction.NSRemoting.apinsinvoke)}";
            

            GS.userConfig = {
                userName    : "{!$User.FirstName}"+" "+"{!$User.LastName}",
                firstName    : "{!($User.FirstName)}",
                lastName    : "{!($User.LastName)}",
                userId      : "{!$User.Id}",
                userEmail   : "{!$User.Email}",
                userSessionId : "{!(sessionId)}"
            };

             GS.dataConfig = {
               date: d.getFullYear() + '-' + (d.getMonth()>8 ? "":"0") + (d.getMonth() + 1) + "-" + (d.getDate() > 9 ? "":"0") + (d.getDate()),
               interval:"days",
               units:"7" // last 7 days
           }

            GS.apiSessionId = "{!($Api.Session_ID)}";
            GS.Partner_Server_URL_V12 = "{!($Api.Partner_Server_URL_120)}";

            GS.isCustomerExists = "{!(isCustomerExists)}";
            GS.accountId  = "{!(accountId)}";
            GS.customerId = "{!(customerId)}";


            GS.isAccountExists = "{!(isAccountExists)}";
            
            GS.isFromWidgets        = true;
            

            
            GS.isOpportunityWidget = true;
            
            GS.maxAjaxRetries = 2; //Used for refiring the ajax remoting request
            GS.maxAjaxTimeout = 120000; //Used for timeout in case of ajax remoting request
            GS.userBlankPhoto = "{!JSENCODE(URLFOR($Resource.GSAppCSS, 'images/workflow/No-User.jpg'))}";
            GS.isDAMigrationInProcess = {!(IsDAMigrationInProcess)};
            GS.isWidget = true;
            GS.hasCustomerInfoPermissions = {!(CustomerInfoPermissions)};

            GS.useUTCForReports = {!useUTCForReports}; //SFDC timezone setting info, used in report container
            GS.readOnlyUser = {!(checkReadOnlyUser)}; //To check readonly User ot not.

     //scorecardchecks
		    var scorecardChecks = eval({!(scorecardChecks)});
            //TODO: better to user jquery extend().
            for(var s in scorecardChecks) {
                GS[s] = scorecardChecks[s];
            }


		   var viewport = {width:0, height:0};

		    function NavigateAccount() {
				window.location.href = "/" + GS.accountId;
			}

		    var eventMethod = window.addEventListener ? "addEventListener" : "attachEvent";
			var eventer = window[eventMethod];
			var messageEvent = eventMethod == "attachEvent" ? "onmessage" : "message";
			eventer(messageEvent,function(e) {
				try{
					console.info(e.data.callback +", " + window[e.data.callback]);
			 		window[e.data.callback].apply(window, e.data.args);
			 	}catch(e){
			 		console.warn(e);
			 	}
			},false);

			function OnChatterRendered(){

            	j$(".gs-chatter-loader-img").hide();
            	j$(".chatterMainDivClass").show();
                //Topic is added only when the feed is not on cta object
                if(GS.topic && GS.topic.length >0){
           			j$("#publishersharebutton").on("click", onClickShareButton);
            		j$("#publishereditablearea").val(GS.topic + ": ");
            		j$(".publisherFeedItemTypeChoice a").on("click", addTopic);
                	j$("#publishereditablearea").mousedown(addTopic);

           		}
                j$(".cxcontentcommentaction").live("on", onClickAttachFile);
            	AutoCompleteInputElement.prototype.positionACBox = function(a) {
					if(this.element && this.acBox && (!a || this.isACBoxVisible())) {
						pos =j$(':focus').offset();
						this.acBox.setStyle("left", pos.left + "px");
						this.acBox.setStyle("top", pos.top+20 + "px");
						this.acBox.setStyle("width", "auto");
						"object" === typeof Ext && (a = Ext.get("massEdit"), null !== a && this.acBox.setStyle("zIndex", parseFloat(a.getStyle("z-index"), 10) + 10))
					}
				};
            }
            function addTopic() {

                   var iFrameChecker = setInterval(function() {

                     if(j$(".cke_wysiwyg_frame").length) {
                         var chatterIFrameBody = j$(".cke_wysiwyg_frame").contents().find("body");
                         if(chatterIFrameBody.length){

						  setTimeout(function(){

                           			j$(".cke_wysiwyg_frame").contents().find("body").text(GS.topic + ": ").removeClass("placeholder").focus();

                           }, 200);
                           clearInterval(iFrameChecker);
                         }
                     }
                 },200);
            }
            function onClickShareButton(){

                window.setTimeout(function(){
                        j$("#publishereditablearea").val(GS.topic + ": ");
                }, 1500);
            }
            function onClickAttachFile(){

                    var self = this;
                    setTimeout(function(){
                      j$("#contentCommentDropdown").position({
                        at:"left bottom",
                        of:j$(self),
                        my:"left top"
                      });

                    },150);

            }
            GS.honourTimezonePreferences = true; // Only in few pages needs to honor, timezone needs to honored for sfdc data
            GS.displayTimezone = true; // Display Timezone on UI (Especially in the Grid)

     </script>

    <script src="/soap/ajax/31.0/connection.js" type="text/javascript"></script>
    <script src="/soap/ajax/31.0/apex.js" type="text/javascript"></script>
    <apex:includeScript value="/support/console/43.0/integration.js"/>
    <script src="https://www.google.com/jsapi" type ="text/javascript" async = "1"/>
    <script>
        window.addEventListener('load', function () {
            try {
                let mainScripts = document.querySelectorAll('script[src$="main.js"]');
                if (!DatePicker && mainScripts.length === 0) {
                    let scriptSrc = document.createElement('script');
                    scriptSrc.type = 'text/javascript';
                    scriptSrc.src = '/jslibrary/main.js';
                    document.head.appendChild(scriptSrc);
                }
            } catch (e) {
                console.log('Error on appending main.js file');
            }
        });
    </script>
	<style>
         body{
            overflow-y:hidden;
            overflow-x:auto;
        }
    </style>

    <div class="gs_main_wrapper">
    	<div class="loaderWrapper" style="min-height: 400px;display: flex;align-items: center;justify-content: center;">
	    	<div class="preloader-wrapper active" style="margin:0">
		    <div class="spinner-layer spinner-blue-only">
		      <div class="circle-clipper left">
		        <div class="circle"></div>
		      </div><div class="gap-patch">
		        <div class="circle"></div>
		      </div><div class="circle-clipper right">
		        <div class="circle"></div>
		      </div>
		    </div>
		  </div>
    	</div>
    </div>

 

    <apex:outputpanel rendered="{!If($CurrentPage.parameters.env == null , true, false)}">
        <c:AlertForm />
        <script>
            installResources({scripts: ["widget/scripts/widget.bundle.js"], styles:["widget/styles/widget.css"]});
         </script>
    </apex:outputpanel>

    <apex:outputpanel rendered="{!If($CurrentPage.parameters.env == "dev" , true, false)}">
        <c:AlertForm />
        <script type="text/javascript">
            prepareCdnProps();
        </script>
        <apex:stylesheet value="{!IF($CurrentPage.parameters.apppath!=null,$CurrentPage.parameters.apppath,'https://localhost:9091/UI')}/widget/styles/widget.css" />
        <script type="text/javascript" src="{!IF($CurrentPage.parameters.apppath!=null,$CurrentPage.parameters.apppath, "https://localhost:9091/UI")}/widget/scripts/widget.bundle.js"></script>
    </apex:outputpanel>

   <script>
        var GSGA = {
            orgId: "{!$Organization.Id}",
            orgName: "{!$Organization.Name}",
            userName: "{!$User.FirstName}"+" "+"{!$User.LastName}"
        };
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    </script>
    <script src="{!JSENCODE(URLFOR($Resource.CustomJS,'CustomJS/analyticsWrapper.js'))}"></script>

    <apex:form >
        <apex:actionFunction name="actionCTAIdforChatter" action="{!getCTAIdForChatter}" reRender="chatterIdCTA, rerenderCTAChatterPanel" oncomplete="OnChatterRendered()" >
            <apex:param name="paramCTAId" value="" />
        </apex:actionFunction>
    </apex:form>
    <div class="gs-chatter-loader-img" style="display:none;">
            <div class="gs-chatter-loader"></div>
            <span>Loading Chatter</span>
    </div>
    <div class="chatterMainDivClass" style="display:none;">
        <apex:outputPanel id="rerenderCTAChatterPanel">
            <apex:outputPanel id="renderCTAChatterPanel">
                <div id="chatterDivId">
                    <chatter:feed entityId="{!ctaChatterId}" id="chatterIdCTA" />
                </div>
            </apex:outputPanel>
        </apex:outputPanel>
    </div>

     <div id="OppWidgetTransactions" style="align:center;clear: both;display:none;">
         <div style="max-height: 370px;overflow:hidden;top:10px;">
             <apex:outputPanel id="TransactionsByOpportunityPanel">
                 <apex:outputPanel >
                     <apex:include pageName="JBCXM__TransactionByOpportunity" />
                     <div class="dummyClassForSpace" style='clear: both; padding: 4px'> </div>
                 </apex:outputPanel>
             </apex:outputPanel>
         </div>
     </div>
    <!-- JB-000 -->
      <div id="nsParams" style="display:none;width:100%;"></div>
</apex:page>